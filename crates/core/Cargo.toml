[package]
name = "core"
edition = "2021"
build = "build.rs"

[dependencies]
# gk dependencies
utils.workspace = true

# external common deps
log.workspace = true
nohash-hasher.workspace = true
heapless.workspace = true
atomic_refcell.workspace = true
arrayvec.workspace = true
smol_str.workspace = true
lazy_static.workspace = true
bytemuck.workspace = true
smallvec.workspace = true
once_cell.workspace = true
rustc-hash.workspace = true

# app/windowing
winit = "0.30"
raw-window-handle = "0.6"

# math
glam = { version = "0.29", features = ["bytemuck", "debug-glam-assert"] }

# gfx
pollster = "0.3"
wgpu = { version = "22.1", features = ["fragile-send-sync-non-atomic-wasm"] }

# gamepad
gilrs = { version = "0.11", optional = true }

# Instant compatible with wasm
instant = { version = "0.1.13", features = ["wasm-bindgen"] }

# Process images
image = { version = "0.25.2", default-features = false, features = ["png", "jpeg", "webp", "rayon"] }

## deps only for this crate
bitflags = "2.6.0"
strum = "0.26.3"
strum_macros = "0.26.4"
crossbeam-channel = "0.5.13"

# loggin
fern = { version = "0.6.2", optional = true, features = ["colored"] }
env_logger = "0.11.5"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
time = { version = "0.3.36", optional = true, features = ["formatting", "local-offset"] }
spin_sleep_util = "0.1.1"

# wasm deps
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen.workspace = true
js-sys.workspace = true
wasm-bindgen-futures = "0.4.45"

console_error_panic_hook = { version = "0.1.7", optional = true }
console_log = { version = "1.0.0", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies.web-sys]
workspace = true
features = [
    "Screen",
    "Document",
    "Window",
    "Element",
    "HtmlElement",
    "Node",
    "DomRect",
    "DomRectReadOnly",
    "HtmlCanvasElement",
    "XmlHttpRequest",
    "XmlHttpRequestEventTarget",
    "XmlHttpRequestResponseType",
    "Event",
    "EventListener",
    "EventTarget",
    "MouseEvent",
    "WheelEvent",
    "KeyboardEvent",
    "PointerEvent",
    "CompositionEvent",
    "CssStyleDeclaration",
]


[features]
# Hackish, to add environment variables for test builds
test-env = []
# WebGL instead of WebGPU on WASM
webgl = ["wgpu/webgl"]
# Enable Gamepad API
gamepad = ["dep:gilrs"]
# Logging
logs = ["dep:time", "dep:fern", "dep:console_log", "dep:console_error_panic_hook"]

[dev-dependencies]
# Hackish, to add environment variables for test builds
core = { path = ".", features = ["test-env"]}