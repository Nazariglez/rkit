[package]
name = "rkit"
version = "0.1.0"
authors = ["Nazarí González <nazari.nz@gmail.com>"]
edition = "2024"
readme = "README.md"
homepage = "https://github.com/Nazariglez/rkit"
repository = "https://github.com/Nazariglez/rkit"
license = "MIT OR Apache-2.0"
description = ""

[profile.release]
# optimize for speed and size
opt-level = 2
# link time optimization
lto = true
# remove debug symbols
strip = true
# do not parallelize optimizations
codegen-units = 1

[profile.dev.package."*"]
opt-level = 3

[package.metadata.docs.rs]
all-features = true

[workspace]
members = ["crates/*"]

[workspace.dependencies]
# gamekit packages
corelib = { path = "crates/corelib" }
utils = { path = "crates/utils" }
draw = { path = "crates/draw" }
macros = { path = "crates/macros" }
audio = { path = "crates/audio" }
assets = { path = "crates/assets" }

## common deps
log = "0.4.26"
raw-window-handle = "0.6.2"
atomic_refcell = "0.1.13"
serde = { version = "1.0", features = ["serde_derive"] }
rkyv = "0.8.10"
heapless = "0.9.1"
arrayvec = "0.7.6"
nohash-hasher = "0.2.0"
smol_str = "0.3.2"
lazy_static = "1.5.0"
bytemuck = "1.23.0"
encase = { version = "0.11", features = ["glam", "arrayvec", "smallvec"] }
smallvec = "2.0.0-alpha.10"
once_cell = "1.20.3"
rayon = "1.10.0"
rustc-hash = "2.1.1"
num = "0.4.3"
parking_lot = "0.12.3"
web-sys = "0.3.77"
js-sys = "0.3.77"
wasm-bindgen = "0.2.100"
strum = "0.27.1"
strum_macros = "0.27.1"
web-time = { version = "1.1.0", default-features = false }
fastrand = "2.3.0"
serde_json = "1.0.140"

[dependencies]
corelib.workspace = true
utils.workspace = true
macros.workspace = true
draw = { workspace = true, optional = true }
audio = { workspace = true, optional = true }
assets = { workspace = true, optional = true }

log.workspace = true
rustc-hash.workspace = true

# used for rand
arrayvec = { workspace = true, optional = true }
fastrand = { workspace = true, optional = true }

# used on filters TODO maybe this must be optional under the filter feature?
atomic_refcell.workspace = true
once_cell.workspace = true
encase.workspace = true

# used for ui
downcast-rs = { version = "2.0.1", optional = true }
scene-graph = { version = "0.1.0", optional = true }
smallvec = { workspace = true, optional = true }
strum = { workspace = true, optional = true }
strum_macros = { workspace = true, optional = true }
heapless = { workspace = true, optional = true }
indexmap = { version = "2.8.0", optional = true }

# save deps
bitflags = { version = "2.9.1", optional = true }
serde = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
bincode = { version = "2.0.1", features = ["serde"], optional = true }
brotli = { version = "8.0.1", optional = true }
crc32fast = { version = "1.4.2", optional = true }

# locale deps
fluent = { version = "0.17", optional = true }
unic-langid = { version = "0.9.6", optional = true }

# ecs deps
bevy_ecs = { version = "0.15", default-features = false, features = [
  "multi_threaded",
], optional = true }
bevy_tasks = { version = "0.15", default-features = false, features = [
  "multi_threaded",
], optional = true }
web-time = { workspace = true, optional = true }
taffy = { version = "0.7.6", optional = true }

# egui deps
egui = { version = "0.32", optional = true, features = ["bytemuck"] }
bytemuck = { workspace = true, optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
fastrand = { workspace = true, optional = true, features = ["js"] }

[dev-dependencies]
log.workspace = true
bytemuck = { workspace = true, features = ["derive"] }
shipyard = "0.7.6"
static_assertions = "1.1.0"
tempfile = "3.20.0"
egui_demo_lib = "0.32"
futures = "0.3"
rfd = "0.15.4"

[features]
default = [
  "random",
  "draw",
  "draw-default-font",
  "audio",
  "assets",
  "logs",
  "ui",
  "ecs",
  "postfx",
  "particles",
]
# enable headless/server mode
headless = ["corelib/headless"]
# enable loggin
logs = ["corelib/logs"]
# enables gamepad api
gamepad = ["corelib/gamepad"]
# force webgl
webgl = ["corelib/webgl", "draw/webgl"]
# enable fastrand random
random = ["dep:fastrand", "dep:arrayvec"]
# enables draw API
draw = ["dep:draw"]
# enables audio API
audio = ["dep:audio"]
# enabels async assets loading
assets = ["dep:assets"]
# included a default font
draw-default-font = ["draw?/default-font"]
# post process effects
postfx = []
# ui elements
ui = [
  "draw",
  "dep:downcast-rs",
  "dep:scene-graph",
  "dep:smallvec",
  "dep:heapless",
  "dep:strum",
  "dep:strum_macros",
  "dep:taffy",
  "dep:indexmap",
]
# enable ecs/app
ecs = ["dep:bevy_ecs", "dep:bevy_tasks", "macros/ecs", "dep:web-time"]
# enable serialization/deserialization of some internal types
serde = ["dep:serde", "corelib/serde"]
# enable save methods
save = [
  "dep:bitflags",
  "dep:serde",
  "dep:serde_json",
  "dep:bincode",
  "dep:brotli",
  "dep:crc32fast",
]
# enable locale method
locale = ["dep:fluent", "dep:unic-langid"]
# enable egui support
egui = ["dep:egui", "dep:bytemuck"]
# enable particles 
particles = ["dep:serde", "dep:serde_json", "dep:strum", "dep:strum_macros"]
